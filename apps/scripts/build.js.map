{"version":3,"file":"build.js","sourceRoot":"","sources":["build.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+BAA+B;AAE/B,OAAO,EAAC,KAAK,EAAC,MAAM,SAAS,CAAC;AAC9B,OAAO,aAAa,MAAM,iCAAiC,CAAC;AAE5D,OAAO,EAAC,SAAS,EAAC,MAAM,QAAQ,CAAC;AAEjC,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,CAAC;AAC7D,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,OAAO,CAAC;AAEjD,CAAC,GAAS,EAAE;IACV,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC;IACxD,MAAM,YAAY,GAAG,MAAM,SAAS,CAClC;QACE,iBAAiB,EAAE,GAAG,MAAM,oBAAoB;KACjD,EACD,aAAa,IAAI,KAAK,CACvB,CAAC;IAEF,KAAK,CAAC;QACJ,OAAO,EAAE,CAAC,aAAa,EAAE,CAAC;QAC1B,WAAW,EAAE,CAAC,cAAc,CAAC;QAC7B,MAAM;QACN,MAAM,EAAE,IAAI;QAEZ,MAAM,EAAE;YACN,MAAM,EAAE,YAAY;SACrB;QACD,KAAK,EAAE,aAAa;YAClB,KAAK,IAAI;YACP,SAAS,CAAC,KAAK,EAAE,MAAM;gBACrB,IAAI,KAAK,EAAE;oBACT,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;oBAC5C,OAAO;iBACR;gBACD,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;YAChD,CAAC;SACF;QACH,MAAM,EAAE,CAAC,aAAa;QACtB,MAAM,EAAE,CAAC,QAAQ,CAAC;KACnB,CAAC;SACC,IAAI,CAAC,GAAG,EAAE;QACT,OAAO,CAAC,GAAG,CACT,gBAAgB;YACd,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,EAAE,CAAC,CAC9D,CAAC;IACJ,CAAC,CAAC;SACD,KAAK,CAAC,GAAG,EAAE;QACV,KAAK,MAAM,OAAO,IAAI,YAAY,EAAE;YAClC,OAAO,CAAC,KAAK,EAAE,CAAC;SACjB;QACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACP,CAAC,CAAA,CAAC,EAAE,CAAC","sourcesContent":["/* eslint-disable no-console */\r\n\r\nimport {build} from 'esbuild';\r\nimport postCssPlugin from '@chialab/esbuild-plugin-postcss';\r\n\r\nimport {copyFiles} from './copy';\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nconst watch = process.env.NODE_WATCH === 'watch';\r\n\r\n(async () => {\r\n  const outdir = isDevelopment ? 'dist' : 'releases\\\\src';\r\n  const copyWatchers = await copyFiles(\r\n    {\r\n      'src\\\\index.html': `${outdir}\\\\main\\\\index.html`,\r\n    },\r\n    isDevelopment && watch\r\n  );\r\n\r\n  build({\r\n    plugins: [postCssPlugin()],\r\n    entryPoints: ['src/index.ts'],\r\n    outdir,\r\n    bundle: true,\r\n\r\n    define: {\r\n      global: 'globalThis',\r\n    },\r\n    watch: isDevelopment &&\r\n      watch && {\r\n        onRebuild(error, result) {\r\n          if (error) {\r\n            console.error('watch build failed:', error);\r\n            return;\r\n          }\r\n          console.log('watch build succeeded:', result);\r\n        },\r\n      },\r\n    minify: !isDevelopment,\r\n    target: ['es2020'],\r\n  })\r\n    .then(() => {\r\n      console.log(\r\n        'build finished' +\r\n          (isDevelopment && watch ? ', watching for changes...' : '')\r\n      );\r\n    })\r\n    .catch(() => {\r\n      for (const watcher of copyWatchers) {\r\n        watcher.close();\r\n      }\r\n      process.exit(1);\r\n    });\r\n})();\r\n"]}